@use 'sass:map';
@import 'mixins';

.p-dock.dock {
  position: fixed;
  z-index: 98;
  opacity: 0;
  animation: fade-in 0.3s 0.5s ease-in forwards;

  .logo[type='main'] {
    .lighter-color {
      fill: var(--main-item-color-new);
    }

    .darker-color {
      fill: var(--main-item-dark-color-new);
    }
  }

  @media (min-width: $lg) {
    &.p-dock-top,
    &.p-dock-bottom {
      width: 100%;

      .p-dock-list-container {
        width: 100%;

        ul {
          width: 100%;
        }
      }
    }
  }

  .p-dock-list-container {
    padding: 0;
    border: 0;
    background: $p-card-background;
    backdrop-filter: blur(1em);

    ul {
      border-radius: var(--p-dock-border-radius);
      box-shadow: $primary-box-shadow;
      padding: 0;
      margin: 0;
      @include center-content;

      .p-dock-item {
        @include center-content;
        @include my-animation;

        padding: 12px !important;
        min-width: 58px;
        min-height: 58px;

        &:first-child {
          width: 70px !important;
          height: 70px !important;
        }

        &.p-focus {
          box-shadow: none !important;
        }

        .iconify {
          color: $primary-white-green-text-color;
          font-size: 1.25em;
        }

        a {
          overflow: visible;
          text-decoration: none;
          cursor: pointer;
          transition: all 300ms;
          @include center-content;
          @include min-content;

          &:has(.dock-position-buttons) {
            padding: 0;
            width: 3rem;
            height: 3rem;
          }

          &:hover:not(:has(.dock-position-buttons)) {
            transform: scale(1.15);
          }
        }
      }

      @media (min-width: $lg) {
        gap: 4px;
      }
    }
  }

  .dock-position-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 0.25rem;
    max-width: 36px;
    max-height: 36px;
    transform: rotate(45deg);

    &:hover {
      transform: rotate(45deg);
    }

    .top,
    .bottom,
    .left,
    .right {
      margin: 0;
      width: 11px;
      height: 11px;
    }

    .left,
    .right {
      pointer-events: none;
      opacity: 0;

      @media (min-width: $lg) {
        pointer-events: inherit;
        opacity: 1;
      }
    }

    input[type='radio'] {
      box-sizing: border-box;
      appearance: none;
      background: rgb(69 69 69 / 10%);
      width: 10px;
      height: 10px;
      margin: 0;
      cursor: pointer;
    }
  }

  &.p-dock-left,
  &.p-dock-right {
    height: 100%;

    .dock-position-buttons {
      @include center-content;
      margin-left: 0.25em;
    }
    .p-dock-list-container {
      height: 100%;

      ul {
        height: 100%;
      }
    }
  }

  &:not(.staff) {
    .p-dock-item[aria-label='Admin Panel'],
    .p-dock-item[aria-label='Structural'] {
      display: none;
    }
  }

  &.p-dock-top {
    .p-dock-list-container {
      border-bottom: 1px solid $p-card-border;
    }
  }

  &.p-dock-bottom {
    .p-dock-list-container {
      border-top: 1px solid $p-card-border;
    }
  }

  &.p-dock-left {
    .p-dock-list-container {
      border-right: 1px solid $p-card-border;
    }
  }

  &.p-dock-right {
    .p-dock-list-container {
      border-left: 1px solid $p-card-border;
    }
  }
}

$items: (
  admin: (
    color: --main-item-color-new,
  ),
  dashboard: (
    color: --main-item-color-new,
  ),
  entities: (
    color: --main-item-color-new,
  ),
  activity-log: (
    color: --activity-item-color-new,
  ),
  settings: (
    color: --main-item-color-new,
  ),
  structural: (
    color: --main-item-color-new,
  ),
);

@each $item, $props in $items {
  #__nuxt:has(##{$item}) {
    .dock .iconify[ad-type='#{$item}'] {
      @include entity-dock-item-styles(var(map.get($props, color)) !important);
    }
  }
}
