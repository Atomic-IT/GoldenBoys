@use 'sass:math';
@use 'sass:list';

$particle-size: 22vmin;
$animation-duration: 7s;
$amount: 15;

.screen-lights-container {
  position: fixed;
  top: 0;
  width: 100vw;
  height: 100vh;
  z-index: -1;
  opacity: 0;

  @extend %fade-in;
}

body:has(
    :not(
      #about,
      #blog,
      #error-404,
      #home,
      #license,
      #login,
      #register,
      #services
    )
  )
  .screen-lights-container
  .screen-light {
  width: $particle-size;
  height: $particle-size;
  border-radius: $particle-size;
  backface-visibility: hidden;
  position: absolute;
  animation-name: move;
  animation-duration: $animation-duration;
  animation-timing-function: linear;
  animation-iteration-count: infinite;

  @for $i from 1 through $amount {
    &:nth-child(#{$i}) {
      color: if(
        math.random() > 0.5,
        var(--main-item-dark-color-new),
        var(--main-item-secondary-color-new)
      );
      top: math.random(100) * 1%;
      left: math.random(100) * 1%;
      animation-duration: math.random(math.div($animation-duration, 1s)) * 1s + 10s;
      animation-delay: math.div(math.random(math.div($animation-duration, 1s)), 10);
      transform-origin: (math.random(50) - 25) * 1vw (math.random(50) - 25) * 1vh;

      $blur-radius: (math.random() + 0.5) * $particle-size * 0.5;
      $x: if(math.random() > 0.5, -1, 1);

      box-shadow: ($particle-size * 2 * $x) 0 $blur-radius currentcolor;
    }
  }
}

body:has(
    #about,
    #blog,
    #error-404,
    #home,
    #license,
    #login,
    #register,
    #services
  )
  .screen-lights-container
  .screen-light {
  width: $particle-size;
  height: $particle-size;
  border-radius: $particle-size;
  backface-visibility: hidden;
  position: absolute;
  animation-name: move;
  animation-duration: $animation-duration;
  animation-timing-function: linear;
  animation-iteration-count: infinite;

  $colors: (#10b98119, #10b98111, #10b98122);

  @for $i from 1 through $amount {
    &:nth-child(#{$i}) {
      color: list.nth($colors, math.random(list.length($colors))) !important;
      top: math.random(100) * 1%;
      left: math.random(100) * 1%;
      animation-duration: math.random(math.div($animation-duration, 1s)) * 1s + 10s;
      animation-delay: math.div(math.random(math.div($animation-duration, 1s)), 10);
      transform-origin: (math.random(50) - 25) * 1vw (math.random(50) - 25) * 1vh;

      $blur-radius: (math.random() + 0.5) * $particle-size * 0.5;
      $x: if(math.random() > 0.5, -1, 1);

      box-shadow: ($particle-size * 2 * $x) 0 $blur-radius currentcolor;
    }
  }
}

@keyframes move {
  100% {
    transform: translate3d(0, 0, 1px) rotate(360deg);
  }
}
